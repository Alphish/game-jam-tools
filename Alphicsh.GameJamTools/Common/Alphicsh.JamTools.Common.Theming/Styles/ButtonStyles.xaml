<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:Alphicsh.JamTools.Common.Theming.Styles"
  xmlns:cc="clr-namespace:Alphicsh.JamTools.Common.Controls;assembly=Alphicsh.JamTools.Common.Controls"
>
  <!-- ============ -->
  <!-- Common style -->
  <!-- ============ -->
  <Style TargetType="{x:Type cc:ImpButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>

    <Setter Property="MinHeight" Value="32"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="BarPosition" Value="Fill"/>
    <Setter Property="CornerRadius" Value="4"/>

    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
    <Setter Property="local:ButtonTheming.HoverBrush" Value="{DynamicResource ButtonHoverBrush}"/>
    <Setter Property="local:ButtonTheming.ShadowBrush" Value="{DynamicResource ButtonShadowBrush}"/>
    <Setter Property="local:ButtonTheming.GlowBrush" Value="{DynamicResource ButtonGlowBrush}"/>

    <Setter Property="local:ButtonTheming.DisabledForegroundBrush" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
    <Setter Property="local:ButtonTheming.DisabledBackgroundBrush" Value="{DynamicResource ButtonDisabledBackgroundBrush}"/>
    <Setter Property="local:ButtonTheming.DisabledShadowBrush" Value="{DynamicResource ButtonDisabledShadowBrush}"/>
    <Setter Property="local:ButtonTheming.DisabledGlowBrush" Value="{DynamicResource ButtonDisabledGlowBrush}"/>

    <Setter Property="FontSize" Value="16"/>
    <Setter Property="Foreground" Value="{DynamicResource BasicText}"/>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border
              CornerRadius="{Binding ActualCornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
              Background="{TemplateBinding Background}"
            />
            <Border
              CornerRadius="{Binding ActualCornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
              BorderThickness="0,0,2,2"
              BorderBrush="{Binding Path=(local:ButtonTheming.GlowBrush), RelativeSource={RelativeSource TemplatedParent}}"
            />
            <Border
              CornerRadius="{Binding ActualCornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
              BorderThickness="2,2,0,0"
              BorderBrush="{Binding Path=(local:ButtonTheming.ShadowBrush), RelativeSource={RelativeSource TemplatedParent}}"
            />
            <ContentPresenter
              Margin="{TemplateBinding Control.Padding}"
              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
              RecognizesAccessKey="True"
              Content="{TemplateBinding ContentControl.Content}"
            />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter
                Property="Foreground"
                Value="{Binding Path=(local:ButtonTheming.DisabledForegroundBrush), RelativeSource={RelativeSource Self}}"
              />
              <Setter
                Property="Background"
                Value="{Binding Path=(local:ButtonTheming.DisabledBackgroundBrush), RelativeSource={RelativeSource Self}}"
              />
              <Setter
                Property="local:ButtonTheming.ShadowBrush"
                Value="{Binding Path=(local:ButtonTheming.DisabledShadowBrush), RelativeSource={RelativeSource Self}}"
              />
              <Setter
                Property="local:ButtonTheming.GlowBrush"
                Value="{Binding Path=(local:ButtonTheming.DisabledGlowBrush), RelativeSource={RelativeSource Self}}"
              />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter
                Property="Background"
                Value="{Binding Path=(local:ButtonTheming.HoverBrush), RelativeSource={RelativeSource Self}}"
              />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type cc:ImpButton}" x:Key="PrimaryButton" BasedOn="{StaticResource {x:Type cc:ImpButton}}">
    <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.HoverBrush" Value="{DynamicResource PrimaryButtonHoverBrush}"></Setter>
    <Setter Property="local:ButtonTheming.ShadowBrush" Value="{DynamicResource PrimaryButtonShadowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.GlowBrush" Value="{DynamicResource PrimaryButtonGlowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledBackgroundBrush" Value="{StaticResource PrimaryButtonDisabledBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledShadowBrush" Value="{StaticResource PrimaryButtonDisabledShadowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledGlowBrush" Value="{StaticResource PrimaryButtonDisabledGlowBrush}"></Setter>
  </Style>

  <Style TargetType="{x:Type cc:ImpButton}" x:Key="HelpButton" BasedOn="{StaticResource {x:Type cc:ImpButton}}">
    <Setter Property="Background" Value="{DynamicResource HelpButtonBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.HoverBrush" Value="{DynamicResource HelpButtonHoverBrush}"></Setter>
    <Setter Property="local:ButtonTheming.ShadowBrush" Value="{DynamicResource HelpButtonShadowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.GlowBrush" Value="{DynamicResource HelpButtonGlowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledBackgroundBrush" Value="{StaticResource HelpButtonDisabledBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledShadowBrush" Value="{StaticResource HelpButtonDisabledShadowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledGlowBrush" Value="{StaticResource HelpButtonDisabledGlowBrush}"></Setter>
  </Style>

  <Style TargetType="{x:Type cc:ImpButton}" x:Key="DangerButton" BasedOn="{StaticResource {x:Type cc:ImpButton}}">
    <Setter Property="Background" Value="{DynamicResource DangerButtonBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.HoverBrush" Value="{DynamicResource DangerButtonHoverBrush}"></Setter>
    <Setter Property="local:ButtonTheming.ShadowBrush" Value="{DynamicResource DangerButtonShadowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.GlowBrush" Value="{DynamicResource DangerButtonGlowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledBackgroundBrush" Value="{DynamicResource DangerButtonDisabledBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledShadowBrush" Value="{DynamicResource DangerButtonDisabledShadowBrush}"></Setter>
    <Setter Property="local:ButtonTheming.DisabledGlowBrush" Value="{DynamicResource DangerButtonDisabledGlowBrush}"></Setter>
  </Style>

  <Style TargetType="{x:Type cc:ImpButton}" x:Key="NotAvailableButton" BasedOn="{StaticResource {x:Type cc:ImpButton}}">
    <Setter Property="Height" Value="16"></Setter>
    <Setter Property="MinHeight" Value="16"></Setter>
    <Setter Property="Width" Value="32"></Setter>
    <Setter Property="FontSize" Value="12"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource DimText}"></Setter>
    <Setter Property="Background" Value="Transparent"></Setter>
    <Setter Property="local:ButtonTheming.HoverBrush" Value="{DynamicResource MouseOverHighlight}"></Setter>
    <Setter Property="local:ButtonTheming.ShadowBrush" Value="Transparent"></Setter>
    <Setter Property="local:ButtonTheming.GlowBrush" Value="Transparent"></Setter>
  </Style>

  <Style TargetType="{x:Type cc:ImpButton}" x:Key="CloseModalButton" BasedOn="{StaticResource {x:Type cc:ImpButton}}">
    <Setter Property="Height" Value="24"></Setter>
    <Setter Property="Width" Value="24"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonBackgroundBrush}"></Setter>
    <Setter Property="local:ButtonTheming.HoverBrush" Value="{DynamicResource PrimaryButtonHoverBrush}"></Setter>
    <Setter Property="Command" Value="{Binding CloseWindowCommand}"/>
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Margin="0,0,8,0">
            <Border Background="Transparent">
              <Path
                Width="16"
                Height="16"
                Stroke="{TemplateBinding Foreground}"
                StrokeThickness="3"
                Data="M 0 0 L 16 16 M 0 16 L 16 0"
              ></Path>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter
                Property="Foreground"
                Value="{Binding Path=(local:ButtonTheming.HoverBrush), RelativeSource={RelativeSource Self}}"
              />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>