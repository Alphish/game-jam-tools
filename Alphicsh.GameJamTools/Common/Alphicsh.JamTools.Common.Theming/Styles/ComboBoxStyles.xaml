<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:Alphicsh.JamTools.Common.Theming"
>
  <Style TargetType="ComboBox">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="MinHeight" Value="36" />

    <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
    <Setter Property="local:TextBoxTheming.FocusBrush" Value="{DynamicResource TextBoxFocusBrush}"/>
    <Setter Property="local:TextBoxTheming.GlowBrush" Value="{DynamicResource TextBoxGlowBrush}"/>
    <Setter Property="local:TextBoxTheming.ShadowBrush" Value="{DynamicResource TextBoxShadowBrush}"/>

    <Setter Property="FontSize" Value="16"></Setter>
    <Setter Property="Foreground" Value="{DynamicResource BasicText}"></Setter>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <ToggleButton x:Name="ToggleButton" Grid.Column="2" Style="{DynamicResource ComboBoxToggleButtonStyle}"/>
            <ContentPresenter
              x:Name="ContentSite"
              IsHitTestVisible="False"
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              Margin="8,4,28,4"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
            />
            <Popup
              x:Name="Popup"
              SnapsToDevicePixels="True"
              Placement="Bottom"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              AllowsTransparency="True"
              Focusable="False"
              PopupAnimation="Slide"
            >
              <Grid
                x:Name="DropDown"
                SnapsToDevicePixels="True"
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="{TemplateBinding MaxDropDownHeight}"
              >
                <Border
                  x:Name="DropDownBorder"
                  BorderThickness="1"
                  BorderBrush="{DynamicResource ExtraDimText}"
                  Background="{DynamicResource TextBoxFocusBrush}"
                />

                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
              <Setter
                Property="Background"
                Value="{Binding Path=(local:TextBoxTheming.FocusBrush), RelativeSource={RelativeSource Self}}"
              />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
              <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- Inner toggle button style -->
  <Style TargetType="ToggleButton" x:Key="ComboBoxToggleButtonStyle">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="IsChecked" Value="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition Width="24"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Grid.ColumnSpan="2" Height="36">
              <Border
                x:Name="Border"
                CornerRadius="8"
                Margin="1"
                Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
              />
              <Border
                CornerRadius="8"
                BorderThickness="2,2,0,0"
                BorderBrush="{Binding Path=(local:TextBoxTheming.GlowBrush), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
              />
              <Border
                CornerRadius="8"
                BorderThickness="0,0,2,2"
                BorderBrush="{Binding Path=(local:TextBoxTheming.ShadowBrush), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
              />
            </Grid>

            <Path
              x:Name="Arrow"
              Grid.Column="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z"
              Fill="{DynamicResource ListScrollBrush}"
            />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- ComboBox items -->
  <Style TargetType="ComboBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Border x:Name="HighlightBorder" Padding="2" Background="Transparent">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource MouseOverHighlight}"></Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource SelectionHighlight}"></Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>