<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:Alphicsh.JamTools.Common.Theming.Styles"
  xmlns:cc="clr-namespace:Alphicsh.JamTools.Common.Controls;assembly=Alphicsh.JamTools.Common.Controls"
>
  <!-- ============ -->
  <!-- Common style -->
  <!-- ============ -->
  <Style TargetType="{x:Type cc:ImpTextBox}">
    <Style.Resources>
      <Style TargetType="ScrollViewer" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="local:ScrollTheming.ScrollBrush" Value="{DynamicResource TextBoxScrollBrush}"></Setter>
        <Setter Property="local:ScrollTheming.ScrollPressedBrush" Value="{DynamicResource TextBoxScrollPressedBrush}"></Setter>
        <Setter Property="local:ScrollTheming.ScrollDisabledBrush" Value="{DynamicResource TextBoxScrollDisabledBrush}"></Setter>
      </Style>
    </Style.Resources>

    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Padding" Value="2"/>
    <Setter Property="BarPosition" Value="Fill"/>
    <Setter Property="CornerRadius" Value="8"/>

    <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
    <Setter Property="local:TextBoxTheming.FocusBrush" Value="{DynamicResource TextBoxFocusBrush}"/>
    <Setter Property="local:TextBoxTheming.GlowBrush" Value="{DynamicResource TextBoxGlowBrush}"/>
    <Setter Property="local:TextBoxTheming.ShadowBrush" Value="{DynamicResource TextBoxShadowBrush}"/>

    <Setter Property="FontSize" Value="13"/>
    <Setter Property="Foreground" Value="{DynamicResource BasicText}"/>
    <Setter Property="PlaceholderForeground" Value="{DynamicResource ExtraDimText}"/>

    <!-- Control template -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Grid>
            <Border
              CornerRadius="{Binding ActualCornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
              Background="{TemplateBinding Background}"
            >
              <Grid Margin="1">
                <Border
                  Margin="2,0,0,0"
                  Padding="{TemplateBinding Padding}"
                  Visibility="{Binding PlaceholderVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                >
                  <TextBlock
                    SnapsToDevicePixels="True"
                    Margin="4"
                    FontFamily="{TemplateBinding FontFamily}"
                    FontSize="{TemplateBinding FontSize}"
                    Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                    Text="{Binding Placeholder, RelativeSource={RelativeSource TemplatedParent}}"
                  />
                </Border>
                <ScrollViewer Margin="4" x:Name="PART_ContentHost" />
              </Grid>
            </Border>
            <Border
              CornerRadius="{Binding ActualCornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
              BorderThickness="2,2,0,0"
              BorderBrush="{Binding Path=(local:TextBoxTheming.GlowBrush), RelativeSource={RelativeSource TemplatedParent}}"
            />
            <Border
              CornerRadius="{Binding ActualCornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
              BorderThickness="0,0,2,2"
              BorderBrush="{Binding Path=(local:TextBoxTheming.ShadowBrush), RelativeSource={RelativeSource TemplatedParent}}"
            />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
              <Setter
                Property="Background"
                Value="{Binding Path=(local:TextBoxTheming.FocusBrush), RelativeSource={RelativeSource Self}}"
              />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <!-- Validation error template -->
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <AdornedElementPlaceholder/>
            <Border
              IsHitTestVisible="False"
              CornerRadius="8"
              BorderThickness="2"
              BorderBrush="{DynamicResource TextBoxErrorOverlayBrush}"
              Background="{DynamicResource TextBoxErrorOverlayBrush}"
            />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <!-- Validation error triggers -->
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="true">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- =============== -->
  <!-- Text area style -->
  <!-- =============== -->
  <Style TargetType="{x:Type cc:ImpTextBox}" x:Key="TextArea" BasedOn="{StaticResource {x:Type cc:ImpTextBox}}">
    <Setter Property="TextWrapping" Value="Wrap"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
    <Setter Property="AcceptsReturn" Value="True"/>
    <Setter Property="AcceptsTab" Value="False"/>
  </Style>
</ResourceDictionary>